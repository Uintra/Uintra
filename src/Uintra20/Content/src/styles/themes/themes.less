@theme-1: .blue-theme;

// @theme-1
.reversal-theme() {
    @panel-background-color: @key-color;
    @panel-text-color: @text-reverse-color;
}
@themes: blue, grey, grey-blue, default;

.theme(@prop, @opacity: 100) {
    & when (@prop = bg-color) {
        .loop(@i: length(@themes)) when (@i > 0) {
            @theme: extract(@themes, @i);
            .@{theme}-theme:host & {
                & when (@theme = default) {
                    .default-theme;
                    background-color: fade(@panel-background-color, @opacity);
                }
                & when (@theme = blue) {
                    .blue-theme-vars;
                    background-color: fade(@panel-background-color, @opacity);
                }
                & when (@theme = grey) {
                    .grey-theme-vars;
                    background-color: fade(@panel-background-color, @opacity);
                }
                & when (@theme = grey-blue) {
                    .grey-blue-theme-vars;
                    background-color: fade(@panel-background-color, @opacity);
                }
            }
            .loop((@i - 1));
        } .loop;
    }

    & when (@prop = text-color) {
        .loop(@i: length(@themes)) when (@i > 0) {
            @theme: extract(@themes, @i);
            .@{theme}-theme:host & {
                & when (@theme = default) {
                    .default-theme;
                    color: @panel-text-color;
                }
                & when (@theme = blue) {
                    .blue-theme-vars;
                    color: @panel-text-color;
                }
                & when (@theme = grey) {
                    .grey-theme-vars;
                    color: @panel-text-color;
                }
                & when (@theme = grey-blue) {
                    .grey-blue-theme-vars;
                    color: @panel-text-color;
                }
            }
            .loop((@i - 1));
        } .loop;
    }

    & when (@prop = button-color) {
        .loop(@i: length(@themes)) when (@i > 0) {
            @theme: extract(@themes, @i);
            .@{theme}-theme:host & {
                & when (@theme = default) {
                    .default-theme;
                    color: @panel-button-color;
                }
                & when (@theme = blue) {
                    .blue-theme-vars;
                    color: @panel-button-color;
                }
                & when (@theme = grey) {
                    .grey-theme-vars;
                    color: @panel-button-color;
                }
                & when (@theme = grey-blue) {
                    .grey-blue-theme-vars;
                    color: @panel-button-color;
                }
            }
            .loop((@i - 1));
        } .loop;
    }

    & when (@prop = title-color) {
        .loop(@i: length(@themes)) when (@i > 0) {
            @theme: extract(@themes, @i);
            .@{theme}-theme:host & {
                & when (@theme = default) {
                    .default-theme;
                    color: @panel-title-color;
                }
                & when (@theme = blue) {
                    .blue-theme-vars;
                    color: @panel-title-color;
                }
                & when (@theme = grey) {
                    .grey-theme-vars;
                    color: @panel-title-color;
                }
                & when (@theme = grey-blue) {
                    .grey-blue-theme-vars;
                    color: @panel-title-color;
                }
            }
            .loop((@i - 1));
        } .loop;
    }

    & when (@prop = link-color) {
      .loop(@i: length(@themes)) when (@i > 0) {
          @theme: extract(@themes, @i);
          .@{theme}-theme:host & {
              & when (@theme = default) {
                  .default-theme;
                  color: @panel-link-color;
                  border-color: @panel-link-underline-color;
              }
              & when (@theme = blue) {
                .blue-theme-vars;
                color: @panel-link-color;
                border-color: @panel-link-underline-color;
              }
              & when (@theme = grey) {
                .grey-theme-vars;
                color: @panel-link-color;
                border-color: @panel-link-underline-color;
              }
              & when (@theme = grey-blue) {
                .grey-blue-theme-vars;
                color: @panel-link-color;
                border-color: @panel-link-underline-color;
              }
          }
          .loop((@i - 1));
      } .loop;
  }
}


.default-theme() {
  @panel-background-color: @white;
  @panel-text-color: @body-text-color;
  @panel-title-color: @body-text-color;
  @panel-button-color: @text-reverse-color;
  @color: @text-reverse-color;

  @panel-link-color: @link-color;
  @panel-link-underline-color:  fade(@link-color, 60%);
}

.blue-theme-vars () {
  @panel-background-color: @light-blue;
  @panel-text-color: @body-text-color;
  @panel-title-color: @body-text-color;
  @panel-button-color: @text-reverse-color;
  @color: @text-reverse-color;

  @panel-link-color: @link-color;
  @panel-link-underline-color:  fade(@text-reverse-color, 60%);
}

.grey-theme-vars () {
  @panel-background-color: @dark-grey;
  @panel-text-color: @body-text-color;
  @panel-title-color: @body-text-color;
  @panel-button-color: @black;
  @color: @text-color;

  @panel-link-color: @link-color;
  @panel-link-underline-color:  fade(@text-color, 60%);
}

.grey-blue-theme-vars () {
  @panel-background-color: @pink;

  @panel-text-color: @body-text-color;
  @panel-title-color: @body-text-color;
  @panel-button-color: @body-text-color;
  @color: @text-color;

  @panel-link-color: @link-color;
  @panel-link-underline-color:  fade(@text-reverse-color, 60%);
}
