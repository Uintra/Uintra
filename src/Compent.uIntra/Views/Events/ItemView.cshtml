@using Uintra.Core.Extensions
@model Compent.Uintra.Core.Events.EventExtendedItemModel
@{
    var currentPinnedClass = Model.IsPinActual ? "_pinned" : "";
}
<div class="feed__item @currentPinnedClass">
    <div class="clearfix">
        @if (Model.IsPinned || Model.IsPinActual)
        {
            <span class="pinned__item">@Html.Localize("Activity.Pinned.lbl")</span>
        }
        @Html.Action("ItemHeader", "Activity", new { header = Model.HeaderInfo })
    </div>
    <div class="feed__item-image"> </div>
    @if (!string.IsNullOrWhiteSpace(Model.Description))
    {
        <div class="feed__item-txt _clamp" data-url="@Model.Links.Details">@Html.Raw(Model.Description)</div>
    }
    @if (Model.IsSubscribed)
    {
        <div class="feed__item-subscribed">
            <span class="feed__item-subscribed-label js-feed__item-subscribed">
                <svg class="svg-icon" viewBox="0 0 512 512" width="17px" height="17px">
                    <use xlink:href="#icon-checkmark" x="0" y="0"></use>
                </svg> @Html.Localize("CentralFeed.IsSubscribed.lbl")
            </span>
        </div>
        
    }
    <div class="feed__item-images">
        @{ Html.RenderAction("Preview", "LightboxGallery", new { model = Model.LightboxGalleryPreviewInfo }); }
    </div>
    <div class="feed__item-feed">
        <div class="feed__item-feed-holder">
            @{ Html.RenderAction("Likes", "Likes", new { likesInfo = Model.LikesInfo }); }
            @{ Html.RenderAction("Preview", "Comments", new { activityId = Model.Id, link = Model.Links.Details, isReadOnly = Model.IsReadOnly }); }
        </div>
    </div>
</div>