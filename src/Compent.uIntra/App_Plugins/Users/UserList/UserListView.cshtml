@inherits UmbracoViewPage<Uintra.Users.UserList.UserListViewModel>
@using Uintra.Core.Extensions
@using Newtonsoft.Json

<section class="user-list-panel">
    <div class="user-search">
        <h3 class="user-search__title">@Model.Title</h3>
        <h4 class="user-search__subtitle">@Html.Localize("UserList.Search.Title.lbl")</h4>
        <form class="user-search__form">
            <input type="text" class="user-search__input js-user-list-filter" placeholder="@Html.Localize("UserList.Search.Placeholder.lbl")" />
            <button class="user-search__button js-search-button" type="button">
                <span class="icon-search">
                    <svg class="svg-icon" viewBox="0 0 32 32" width="30px" height="30px">
                        <use xlink:href="#icon-search" x="0" y="0"></use>
                    </svg>
                </span>
            </button>
        </form>
    </div>
    <div class="users-table-block">
        <div class="users-table js-user-list-table"
             data-title="@Html.Localize("UserList.Confirm.Delete.Title")"
             data-text="@Html.Localize("UserList.Confirm.Delete.Text")">
            <div class="users-table__tbody js-tbody">
                @*@Html.Partial(Model.UsersRowsViewPath, Model.UsersRows)*@
                @Html.Action("RenderRows", "UserList", new { model = Model.UsersRows })
            </div>
        </div>
    </div>
    <button class="btn js-user-list-button"
            @if (Model.IsLastRequest) { <text> style="display:none;" </text> }>
        @Html.Localize("UserList.Table.LoadMoreButton.Text")
    </button>
    <div class="js-user-list-empty-result"
         @if (Model.UsersRows.Users.Count() != 0) { <text> style="display:none;" </text> }>
        @Html.Localize("UserList.Table.EmptyResult.lbl")
    </div>
</section>


<script type="text/javascript">
    window.userListConfig = {
        request: {
            text: '',
            skip: 0,
            take: @Model.DisplayedAmount,
            orderingString: '@(Model.OrderByColumn?.PropertyName)',
            orderingDirection: 0,
            selectedColumns: '@Html.Raw(JsonConvert.SerializeObject(Model.UsersRows.SelectedColumns))',
            groupId: ''
        },
        amountPerRequest: @Model.AmountPerRequest,
        displayedAmount: @Model.DisplayedAmount
    };
</script>